(()=>{"use strict";var e={365:(e,n,t)=>{t.d(n,{A:()=>c});var r=t(354),o=t.n(r),a=t(314),i=t.n(a)()(o());i.push([e.id,"* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\nbody {\n  background-color: #172554;\n}\nform {\n  height: 350px;\n  width: 300px;\n  border: 2px solid while;\n  border-radius: 4px;\n  margin: 200px auto 10px auto;\n  background-color: white;\n  padding: 10px;\n}\nform > * {\n  display: block;\n  margin: 0 auto;\n}\nform label {\n  margin: 10px auto 4px auto;\n  text-align: center;\n}\nform button {\n  height: 35px;\n  width: 100px;\n  color: white;\n  background-color: #172554;\n  border-radius: 10px;\n  margin: 50px auto 0 auto;\n}\nform input {\n  background-color: whitesmoke;\n}\n#error-box {\n  height: 100px;\n  width: 300px;\n  background-color: white;\n  margin: 10px auto;\n  border-radius: 5px;\n}\n.green {\n  background-color: green;\n}\n.red {\n  background-color: red;\n}\n#game-board {\n  width: 422px;\n  height: 422px;\n  background-color: black;\n  display: grid;\n  padding: 2px;\n  gap: 2px;\n  grid-template-columns: repeat(10, 40px);\n  grid-template-rows: repeat(10, 40px);\n  margin: 50px auto;\n}\n.game-cell {\n  height: 40px;\n  width: 40px;\n  background-color: white;\n}\n.green {\n  background-color: lightgreen;\n}\n.red {\n  background-color: red;\n}\n.selected {\n  background-color: green;\n}\n#player-instructions {\n  width: 80%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: white;\n  height: 40px;\n  border-radius: 10px;\n  margin: 10px auto;\n}\n#player-board {\n  height: 40px;\n  width: 120px;\n  background-color: black;\n  color: white;\n  display: block;\n  margin: 0 auto;\n}\n.sunk-ship {\n  background-color: #ff4746;\n}\n.missed-hit div,\n.hit div {\n  height: 15px;\n  width: 15px;\n  border-radius: 50%;\n}\n.missed-hit,\n.hit {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n.missed-hit div {\n  background-color: black;\n}\n.hit div {\n  background-color: red;\n}\n","",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AAAA;EACE,SAAS;EACT,UAAU;EACV,sBAAsB;AACxB;AACA;EACE,yBAAyB;AAC3B;AACA;EACE,aAAa;EACb,YAAY;EACZ,uBAAuB;EACvB,kBAAkB;EAClB,4BAA4B;EAC5B,uBAAuB;EACvB,aAAa;AACf;AACA;EACE,cAAc;EACd,cAAc;AAChB;AACA;EACE,0BAA0B;EAC1B,kBAAkB;AACpB;AACA;EACE,YAAY;EACZ,YAAY;EACZ,YAAY;EACZ,yBAAyB;EACzB,mBAAmB;EACnB,wBAAwB;AAC1B;AACA;EACE,4BAA4B;AAC9B;AACA;EACE,aAAa;EACb,YAAY;EACZ,uBAAuB;EACvB,iBAAiB;EACjB,kBAAkB;AACpB;AACA;EACE,uBAAuB;AACzB;AACA;EACE,qBAAqB;AACvB;AACA;EACE,YAAY;EACZ,aAAa;EACb,uBAAuB;EACvB,aAAa;EACb,YAAY;EACZ,QAAQ;EACR,uCAAuC;EACvC,oCAAoC;EACpC,iBAAiB;AACnB;AACA;EACE,YAAY;EACZ,WAAW;EACX,uBAAuB;AACzB;AACA;EACE,4BAA4B;AAC9B;AACA;EACE,qBAAqB;AACvB;AACA;EACE,uBAAuB;AACzB;AACA;EACE,UAAU;EACV,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,uBAAuB;EACvB,YAAY;EACZ,mBAAmB;EACnB,iBAAiB;AACnB;AACA;EACE,YAAY;EACZ,YAAY;EACZ,uBAAuB;EACvB,YAAY;EACZ,cAAc;EACd,cAAc;AAChB;AACA;EACE,yBAAyB;AAC3B;AACA;;EAEE,YAAY;EACZ,WAAW;EACX,kBAAkB;AACpB;AACA;;EAEE,aAAa;EACb,uBAAuB;EACvB,mBAAmB;AACrB;AACA;EACE,uBAAuB;AACzB;AACA;EACE,qBAAqB;AACvB",sourcesContent:["* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\nbody {\n  background-color: #172554;\n}\nform {\n  height: 350px;\n  width: 300px;\n  border: 2px solid while;\n  border-radius: 4px;\n  margin: 200px auto 10px auto;\n  background-color: white;\n  padding: 10px;\n}\nform > * {\n  display: block;\n  margin: 0 auto;\n}\nform label {\n  margin: 10px auto 4px auto;\n  text-align: center;\n}\nform button {\n  height: 35px;\n  width: 100px;\n  color: white;\n  background-color: #172554;\n  border-radius: 10px;\n  margin: 50px auto 0 auto;\n}\nform input {\n  background-color: whitesmoke;\n}\n#error-box {\n  height: 100px;\n  width: 300px;\n  background-color: white;\n  margin: 10px auto;\n  border-radius: 5px;\n}\n.green {\n  background-color: green;\n}\n.red {\n  background-color: red;\n}\n#game-board {\n  width: 422px;\n  height: 422px;\n  background-color: black;\n  display: grid;\n  padding: 2px;\n  gap: 2px;\n  grid-template-columns: repeat(10, 40px);\n  grid-template-rows: repeat(10, 40px);\n  margin: 50px auto;\n}\n.game-cell {\n  height: 40px;\n  width: 40px;\n  background-color: white;\n}\n.green {\n  background-color: lightgreen;\n}\n.red {\n  background-color: red;\n}\n.selected {\n  background-color: green;\n}\n#player-instructions {\n  width: 80%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: white;\n  height: 40px;\n  border-radius: 10px;\n  margin: 10px auto;\n}\n#player-board {\n  height: 40px;\n  width: 120px;\n  background-color: black;\n  color: white;\n  display: block;\n  margin: 0 auto;\n}\n.sunk-ship {\n  background-color: #ff4746;\n}\n.missed-hit div,\n.hit div {\n  height: 15px;\n  width: 15px;\n  border-radius: 50%;\n}\n.missed-hit,\n.hit {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n.missed-hit div {\n  background-color: black;\n}\n.hit div {\n  background-color: red;\n}\n"],sourceRoot:""}]);const c=i},314:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,o,a){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(r)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(i[s]=!0)}for(var l=0;l<e.length;l++){var u=[].concat(e[l]);r&&i[u[0]]||(void 0!==a&&(void 0===u[5]||(u[1]="@layer".concat(u[5].length>0?" ".concat(u[5]):""," {").concat(u[1],"}")),u[5]=a),t&&(u[2]?(u[1]="@media ".concat(u[2]," {").concat(u[1],"}"),u[2]=t):u[2]=t),o&&(u[4]?(u[1]="@supports (".concat(u[4],") {").concat(u[1],"}"),u[4]=o):u[4]="".concat(o)),n.push(u))}},n}},354:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */");return[n].concat([a]).join("\n")}return[n].join("\n")}},72:e=>{var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var a={},i=[],c=0;c<e.length;c++){var s=e[c],l=r.base?s[0]+r.base:s[0],u=a[l]||0,d="".concat(l," ").concat(u);a[l]=u+1;var A=t(d),p={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==A)n[A].references++,n[A].updater(p);else{var m=o(p,r);r.byIndex=c,n.splice(c,0,{identifier:d,updater:m,references:1})}i.push(d)}return i}function o(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,o){var a=r(e=e||[],o=o||{});return function(e){e=e||[];for(var i=0;i<a.length;i++){var c=t(a[i]);n[c].references--}for(var s=r(e,o),l=0;l<a.length;l++){var u=t(a[l]);0===n[u].references&&(n[u].updater(),n.splice(u,1))}a=s}}},659:e=>{var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},540:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},56:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},825:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},113:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(r){var o=n[r];if(void 0!==o)return o.exports;var a=n[r]={id:r,exports:{}};return e[r](a,a.exports,t),a.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),t.nc=void 0;let r=document.querySelector("#player-one-selection"),o=document.querySelector("#player-one-name"),a=document.querySelector("#player-two-selection"),i=document.querySelector("#player-two-name"),c=document.querySelector("#error-box");async function s(e){c.innerHTML="";let n=0;for(;n<e.length;){let t=await new Promise((t=>{setTimeout((()=>{t(e.split("")[n])}),50)}));c.innerHTML+=`<span>${t}</span>`,n++}}function l(e){return[parseInt(e[1].slice(1)),parseInt(e[2].slice(1))]}function u(e,n,t){let r=n[1]<=10-e,o=t.every((t=>t[0][0]!==n[0]||n[1]+e<t[0][1]||t[t.length-1][1]+1<n[1]));return r&&o}let d=document.querySelector("form"),A=document.querySelector("#error-box");function p(e=[],n){document.querySelector("#game").innerHTML=`<p id="player-instructions">Place the cruiser ${n}</p>\n                                            <div id="game-board"></div>\n                                            <button id="player-board">Next</button>`;let t=document.querySelector("#game-board");for(let e=0;e<10;e++)for(let n=0;n<10;n++){let r=document.createElement("div");r.className=`game-cell r${e} c${n}`,t.appendChild(r)}let r=[{name:"cruiser",length:5},{name:"battleship",length:4},{name:"destroyer",length:3},{name:"submarine",length:3},{name:"patrol boat",length:2}],o=0;function a(n){let t=l(n.target.classList);if(u(r[o].length,t,e))for(let e=t[1];e<t[1]+r[o].length;e++)document.querySelector(`.r${t[0]}.c${e}`).classList.toggle("green");else if(t[1]+r[o].length>10)for(let e=t[1];e<10;e++)document.querySelector(`.r${t[0]}.c${e}`).classList.toggle("red");else for(let e=t[1];e<t[1]+r[o].length;e++)document.querySelector(`.r${t[0]}.c${e}`).classList.toggle("red")}function i(t){let c=l(t.target.classList),s=[];if(u(r[o].length,c,e)){for(let e=c[1];e<c[1]+r[o].length;e++)document.querySelector(`.r${c[0]}.c${e}`).classList.add("selected"),s.push([c[0],e]);e.push(s),o++,o>4?document.querySelectorAll(".game-cell").forEach((e=>{e.removeEventListener("mouseover",a),e.removeEventListener("mouseleave",a),e.removeEventListener("click",i),document.querySelector("#player-instructions").innerText=`${n} click "Next" button to proceed`})):document.querySelector("#player-instructions").innerText=`Place The ${r[o].name} ${n}`}}document.querySelectorAll(".game-cell").forEach((e=>{e.addEventListener("mouseover",a),e.addEventListener("mouseleave",a),e.addEventListener("click",i)}))}function m(e,n){function t(t){let r,o=l(t.target.classList),a=e.gameBoard.receiveAttack(o);if(r="hit"===a[0]||"missed-hit"===a[0]?`It's a ${a[0]} by ${n.name}`:`${n.name} sank your ${a[1].name}`,g(e),e.gameBoard.isGameOver())document.querySelector("#player-instructions").innerText=`${n.name}(${n.type}) Wins`,h();else{async function i(){document.querySelector("#player-instructions").innerText=r,await new Promise((t=>{setTimeout((()=>{document.querySelector("#player-instructions").innerText="Press next to continue",document.querySelector("#player-board").addEventListener("click",(()=>{m(n,e)}))}),2e3)}))}i()}}if(document.querySelector("#game").innerHTML='<p id="player-instructions"></p>\n                  <div id="game-board"></div>\n                  <button id="player-board">Next</button>',document.querySelector("#player-instructions").innerText=`It's your take ${n.name} attack ${e.name}'s board`,g(e),"computer"===n.type){let r,o=function(e){let n,t=e.hitCoordinates,r=e.missedHits,o=t[t.length-1];if(void 0!==o){let e=[[o[0]-1,o[1]],[o[0],o[1]-1],[o[0]+1,o[1]],[o[0],o[1]+1]].find((e=>e[0]>=0&&e[1]>=0&&e[0]<=9&&e[1]<=9&&t.every((n=>n[0]!==e[0]||n[1]!==e[1]))&&r.every((n=>n[0]!==e[0]||n[1]!==e[1]))));if(void 0!==e)return e}for(;!n;){let e=[Math.floor(10*Math.random()),Math.floor(10*Math.random())];n=t.every((n=>n[0]!==e[0]||n[1]!==e[1]))&&r.every((n=>n[0]!==e[0]||n[1]!==e[1]))?e:void 0}return n}(e.gameBoard),a=e.gameBoard.receiveAttack(o);if(r="hit"===a[0]||"missed-hit"===a[0]?`It's a ${a[0]} by ${n.name}`:`${n.name} sank your ${a[1].name}`,g(e),e.gameBoard.isGameOver())document.querySelector("#player-instructions").innerText=`${n.name}(${n.type}) Wins`,h();else{async function i(){document.querySelector("#player-instructions").innerText=r,await new Promise((t=>{setTimeout((()=>{document.querySelector("#player-instructions").innerText="Press next to continue",document.querySelector("#player-board").addEventListener("click",(()=>{m(n,e)}))}),2e3)}))}i()}}else document.querySelectorAll(".game-cell").forEach((e=>{e.classList.contains("hit")||e.classList.contains("missed-hit")||e.addEventListener("click",t)}))}function h(){!async function(){await new Promise((e=>{setTimeout((()=>{document.querySelector("#player-instructions").innerText="Game Over , Press Next To restart the game",document.querySelector("#player-board").addEventListener("click",(()=>{document.querySelector("body").dispatchEvent(new CustomEvent("restartGame")),e("promise completed")}))}),2e3)}))}()}function g(e){let n=document.querySelector("#game-board");n.innerHTML="";for(let e=0;e<10;e++)for(let t=0;t<10;t++){let r=document.createElement("div");r.className=`game-cell r${e} c${t}`,n.appendChild(r)}for(let n of e.gameBoard.sunkenShips)n.coordinates.forEach((e=>{document.querySelector(`.r${e[0]}.c${e[1]}`).classList.add("sunk-ship")}));for(let n of e.gameBoard.hitCoordinates)document.querySelector(`.r${n[0]}.c${n[1]}`).classList.add("hit"),document.querySelector(`.r${n[0]}.c${n[1]}`).innerHTML="<div></div>";for(let n of e.gameBoard.missedHits)document.querySelector(`.r${n[0]}.c${n[1]}`).classList.add("missed-hit"),document.querySelector(`.r${n[0]}.c${n[1]}`).innerHTML="<div></div>"}class y{constructor(e,n,t){this.name=e,this.length=n,this.hits=0,this.coordinates=t}hit(){this.hits++}isSunk(){return this.hits===this.length}}class f{constructor(e,n,t,r,o){this.carrier=new y("carrier",5,o),this.battleship=new y("battleship",4,r),this.destroyer=new y("destroyer",3,t),this.submarine=new y("submarine",3,n),this.patrolBoat=new y("patrol-boat",2,e),this.ships=[this.carrier,this.battleship,this.destroyer,this.submarine,this.patrolBoat],this.sunkenShips=[],this.missedHits=[],this.hitCoordinates=[]}receiveAttack(e){for(let n of this.ships)if(n.coordinates.some((n=>e[0]===n[0]&&e[1]===n[1])))return n.hit(),this.hitCoordinates.push(e),n.isSunk()?(this.ships=this.ships.filter((e=>e.name!==n.name)),this.sunkenShips.push(n),["shipSunk",n]):["hit"];return this.missedHits.push(e),["missed-hit"]}isGameOver(){return 0===this.ships.length}}class b{constructor(e,n,t,r,o,a,i){this.name=e,this.type=n,this.gameBoard=new f(i,a,o,r,t)}}var v=t(72),C=t.n(v),E=t(825),B=t.n(E),x=t(659),k=t.n(x),w=t(56),S=t.n(w),q=t(540),$=t.n(q),T=t(113),L=t.n(T),M=t(365),Y={};Y.styleTagTransform=L(),Y.setAttributes=S(),Y.insert=k().bind(null,"head"),Y.domAPI=B(),Y.insertStyleElement=$(),C()(M.A,Y),M.A&&M.A.locals&&M.A.locals,document.querySelector("form button").addEventListener("click",(async e=>{e.preventDefault();let n=function(){if("computer"!==r.value||"computer"!==a.value){if(o.value!==i.value&&!o.validity.valueMissing&&!a.validity.valueMissing)return s("Registration successful"),{playerOneName:o.value,playerOne:r.value,playerTwoName:i.value,playerTwo:a.value};s("Please enter correct names")}else s("It will be pretty boring to watch computers play")}();if(n){function t(){if("computer"===n.playerTwo){let e=[];p(e,n.playerOneName),document.querySelector("#player-board").addEventListener("click",(()=>{if(5===e.length){let r=new b(n.playerOneName,"human",...e),o=new b(n.playerTwoName,"computer",...function(){let e=[],n=[5,4,3,3,2],t=0;for(;t<5;){let r=Math.floor(10*Math.random()),o=Math.floor(Math.random()*(11-n[t]));if(u(n[t],[r,o],e)){let a=[];for(let e=o;e<o+n[t];e++)a.push([r,e]);e.push(a),t++}}return e}());m(o,r),document.querySelector("body").addEventListener("restartGame",t)}}))}else{let e=[];p(e,n.playerOneName),document.querySelector("#player-board").addEventListener("click",(()=>{if(5===e.length){let r=new b(n.playerOneName,"human",...e);console.log(r);let o=[];p(o,n.playerTwoName),document.querySelector("#player-board").addEventListener("click",(()=>{5===o.length&&(m(new b(n.playerTwoName,"human",...o),r),document.querySelector("body").addEventListener("restartGame",t))}))}}))}}await new Promise((e=>{setTimeout((()=>{d.style.display="none",A.style.display="none",e()}),2e3)})),t()}}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,